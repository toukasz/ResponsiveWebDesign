# Vim Basic Commands Documentation

## Introduction
Vim is a highly configurable text editor built to enable efficient text editing. It is an improved version of the vi editor distributed with most UNIX systems. This documentation provides a basic overview of essential Vim commands to get you started.

## Basic Modes
Vim operates in several modes, each serving different purposes:

- **Normal Mode**: Used for navigation and text manipulation.
- **Insert Mode**: Used for inserting text.
- **Visual Mode**: Used for text selection.
- **Command-line Mode**: Used for executing Vim commands.

### Switching Modes
- **Normal Mode**: Press `Esc` to switch to Normal mode from any other mode.
- **Insert Mode**: Press `i` in Normal mode.
- **Visual Mode**: Press `v` in Normal mode.
- **Command-line Mode**: Press `:` in Normal mode.

## Basic Navigation
- `h` : Move cursor left
- `j` : Move cursor down
- `k` : Move cursor up
- `l` : Move cursor right
- `w` : Jump forwards to the start of a word
- `b` : Jump backwards to the start of a word
- `0` : Jump to the beginning of the line
- `$` : Jump to the end of the line
- `gg` : Go to the beginning of the file
- `G` : Go to the end of the file

## Inserting Text
- `i` : Insert before the cursor
- `I` : Insert at the beginning of the line
- `a` : Insert after the cursor
- `A` : Insert at the end of the line
- `o` : Open a new line below the current line and insert
- `O` : Open a new line above the current line and insert

## Editing Text
- `x` : Delete the character under the cursor
- `dw` : Delete from the cursor to the start of the next word
- `dd` : Delete the current line
- `d$` : Delete from the cursor to the end of the line
- `u` : Undo the last change
- `Ctrl-r` : Redo the last undone change
- `r` : Replace the character under the cursor
- `R` : Enter replace mode
- `c` : Change text (similar to delete followed by insert)
  - `cw` : Change from the cursor to the start of the next word
  - `cc` : Change the entire line

## Copy and Paste (Yank and Put)
- `yy` : Yank (copy) the current line
- `yw` : Yank from the cursor to the start of the next word
- `y$` : Yank from the cursor to the end of the line
- `p` : Put (paste) the yanked text after the cursor
- `P` : Put the yanked text before the cursor

## Visual Mode
- `v` : Start visual mode, mark lines, and move the cursor to select text
- `V` : Start visual line mode, select whole lines
- `Ctrl-v` : Start visual block mode, select a block of text

## Searching
- `/` : Search forward for a pattern
- `?` : Search backward for a pattern
- `n` : Repeat the search in the same direction
- `N` : Repeat the search in the opposite direction

## Command-line Mode Commands
- `:w` : Write (save) the file
- `:q` : Quit Vim
- `:wq` : Write and quit
- `:q!` : Quit without saving
- `:e filename` : Open a file
- `:set number` : Show line numbers
- `:set nonumber` : Hide line numbers

## Useful Tips
- **:help [command]**: Open Vim's built-in help for any command.
- **u**: Use `u` to undo changes and `Ctrl-r` to redo them.
- **Esc**: Press `Esc` frequently to ensure you are in Normal mode.

## Conclusion
These basic commands cover essential operations in Vim, enabling you to perform common text editing tasks efficiently. As you become more comfortable with these commands, you can explore more advanced features and customizations to further enhance your productivity in Vim.